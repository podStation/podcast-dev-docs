{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview This collection of documents is primarily aimed at Software Developers building software on the podcast ecosystem. It is being written at the moment to support the development of podStation , but it is aimed as a general resource, not only targeting podcast clients (also known as aggregators). Warning This content does not contain a Licence at the moment, as I have not decided which one to use yet. I am leaning towards MIT. Suggestions and feedback is welcome.","title":"Overview"},{"location":"#overview","text":"This collection of documents is primarily aimed at Software Developers building software on the podcast ecosystem. It is being written at the moment to support the development of podStation , but it is aimed as a general resource, not only targeting podcast clients (also known as aggregators). Warning This content does not contain a Licence at the moment, as I have not decided which one to use yet. I am leaning towards MIT. Suggestions and feedback is welcome.","title":"Overview"},{"location":"documentation/","text":"Documentation","title":"Documentation"},{"location":"documentation/#documentation","text":"","title":"Documentation"},{"location":"monetization-lightning/","text":"Lightning Network Lightning Network is a Layer 2 payment protocol that works on top of blockchain based crypto currencies using smart contracts 1 . Lightning currently supports Bitcoin and Litecoin as currencies, but Bitcoin has a higher adoption. As part of the Podcasting 2.0 initiative, monetization based on the Lightning Network was proposed. Status Although it is already supported by a number of hosting platforms and applications, monetization with Lightning Network is still considered experimental . Use cases Monetization with Lightning Network, at its current state, is used only for the value for value model. In this model, listeners decide how much (monetary) value the listening experience has. Users typically pledge to pay a certain amount for the time listened for each podcast, normally expressed in satoshis 2 per minute . Advantages There are some aspects of the Lightning Network that make it attractive as a technology for podcast monetization: Decentralized - Lightning payments are peer-to-peer . Although they may depend on a middle man (for routing payments), the middle man can be any participant of the network, not a central entity. This means that the podcaster cannot be \"deplatformed\" from a central monetization platform such as Patreon or PayPal ; Based on open standards - The fact that the Lightning Network is based on an open standard means that, to a certain extent 3 , the used software can be replaced, avoiding vendor lock-in Fast - As the name suggests, Lightning payments are nearly instantaneous Allows micropayments 4 - Lightning payments can be done with very small amounts (i.e. down to millisatoshis for Bitcoin payments) Low fees - Once the channels are setup, payments can be done with low (or event zero) fees Disadvantages Exchanging fiat money into crypto currencies and allocating the crypto in the Lightning Network does have considerable fees. It can also be a difficult process, depending on the setup (i.e. if the participants want to operate their own Lightning Nodes). Specification The specification for monetization with Lightning Network is covered in the specification for the podcast:value tag of the podcast namespace . This specification can be found here . Lightning Network - Wikipedia Article \u21a9 1 Satoshi = 1/100 000 000 Bitcoins, it is the smallest bitcoin unit that can be represented in the bitcoin network ledger. Reference: Bitcoin Wikipedia Article, section Units and divisibility \u21a9 Although the lightning nodes use an open standard to participate on the network, the APIs to communicate with the nodes are not standardized and vary from node to node. \u21a9 Micropayment - Wikipedia Article \u21a9","title":"Lightning Network"},{"location":"monetization-lightning/#lightning-network","text":"Lightning Network is a Layer 2 payment protocol that works on top of blockchain based crypto currencies using smart contracts 1 . Lightning currently supports Bitcoin and Litecoin as currencies, but Bitcoin has a higher adoption. As part of the Podcasting 2.0 initiative, monetization based on the Lightning Network was proposed.","title":"Lightning Network"},{"location":"monetization-lightning/#status","text":"Although it is already supported by a number of hosting platforms and applications, monetization with Lightning Network is still considered experimental .","title":"Status"},{"location":"monetization-lightning/#use-cases","text":"Monetization with Lightning Network, at its current state, is used only for the value for value model. In this model, listeners decide how much (monetary) value the listening experience has. Users typically pledge to pay a certain amount for the time listened for each podcast, normally expressed in satoshis 2 per minute .","title":"Use cases"},{"location":"monetization-lightning/#advantages","text":"There are some aspects of the Lightning Network that make it attractive as a technology for podcast monetization: Decentralized - Lightning payments are peer-to-peer . Although they may depend on a middle man (for routing payments), the middle man can be any participant of the network, not a central entity. This means that the podcaster cannot be \"deplatformed\" from a central monetization platform such as Patreon or PayPal ; Based on open standards - The fact that the Lightning Network is based on an open standard means that, to a certain extent 3 , the used software can be replaced, avoiding vendor lock-in Fast - As the name suggests, Lightning payments are nearly instantaneous Allows micropayments 4 - Lightning payments can be done with very small amounts (i.e. down to millisatoshis for Bitcoin payments) Low fees - Once the channels are setup, payments can be done with low (or event zero) fees","title":"Advantages"},{"location":"monetization-lightning/#disadvantages","text":"Exchanging fiat money into crypto currencies and allocating the crypto in the Lightning Network does have considerable fees. It can also be a difficult process, depending on the setup (i.e. if the participants want to operate their own Lightning Nodes).","title":"Disadvantages"},{"location":"monetization-lightning/#specification","text":"The specification for monetization with Lightning Network is covered in the specification for the podcast:value tag of the podcast namespace . This specification can be found here . Lightning Network - Wikipedia Article \u21a9 1 Satoshi = 1/100 000 000 Bitcoins, it is the smallest bitcoin unit that can be represented in the bitcoin network ledger. Reference: Bitcoin Wikipedia Article, section Units and divisibility \u21a9 Although the lightning nodes use an open standard to participate on the network, the APIs to communicate with the nodes are not standardized and vary from node to node. \u21a9 Micropayment - Wikipedia Article \u21a9","title":"Specification"},{"location":"monetization-lightning/agents/","text":"Agents Podcast listener Podcast publisher Podcast client Podcast client owner Payment recipients Lightning Nodes Relationships classDiagram PodcastClientOwner --> PaymentRecipient: can be PodcastPublisher --> PaymentRecipient: can be PaymentRecipient --> LightningNode: receives payment with, manages PodcastListener --> PodcastClient: listen to podcasts with PodcastClientOwner --> PodcastClient: owns PodcastClient --> LightningNode: send payments with PodcastListener --> LightningNode: manages Descriptions Podcast listener The person that consumes (listen to) a podcast, using a Podcast client software. This agent decides how much value the listening experience has. This agent requires access to a Lightning Node in order to send payments. Podcast publisher The person responsible for publishing a podcasts and its episodes. This agent is responsible for maintaining value and payment recipients for podcasts and its episodes. This agent may be also a Payment recipient . Podcast client The software used to listen podcasts. This agent is responsible for storing value related options, valuating the listening time and triggering the payment to payment recipients by communicating with Lightning Nodes . It is expected that this agent collect a fee on the payments. Podcast client owner The owner of the podcast client, typically its developer. This agent is typically a Payment recipient , and receives payments corresponding to fee collected by the Podcast client . Payment Recipient Any agent that receives payments through the Lightning Network . Aside from Podcast publishers and Podcast client owners , many roles in the ecosystem can by this agent, such as podcast guests, editors, charities, royalty owners, etc... This agent requires access to a Lighting Node in order to receive payments.","title":"Agents"},{"location":"monetization-lightning/agents/#agents","text":"Podcast listener Podcast publisher Podcast client Podcast client owner Payment recipients Lightning Nodes","title":"Agents"},{"location":"monetization-lightning/agents/#relationships","text":"classDiagram PodcastClientOwner --> PaymentRecipient: can be PodcastPublisher --> PaymentRecipient: can be PaymentRecipient --> LightningNode: receives payment with, manages PodcastListener --> PodcastClient: listen to podcasts with PodcastClientOwner --> PodcastClient: owns PodcastClient --> LightningNode: send payments with PodcastListener --> LightningNode: manages","title":"Relationships"},{"location":"monetization-lightning/agents/#descriptions","text":"","title":"Descriptions"},{"location":"monetization-lightning/agents/#podcast-listener","text":"The person that consumes (listen to) a podcast, using a Podcast client software. This agent decides how much value the listening experience has. This agent requires access to a Lightning Node in order to send payments.","title":"Podcast listener"},{"location":"monetization-lightning/agents/#podcast-publisher","text":"The person responsible for publishing a podcasts and its episodes. This agent is responsible for maintaining value and payment recipients for podcasts and its episodes. This agent may be also a Payment recipient .","title":"Podcast publisher"},{"location":"monetization-lightning/agents/#podcast-client","text":"The software used to listen podcasts. This agent is responsible for storing value related options, valuating the listening time and triggering the payment to payment recipients by communicating with Lightning Nodes . It is expected that this agent collect a fee on the payments.","title":"Podcast client"},{"location":"monetization-lightning/agents/#podcast-client-owner","text":"The owner of the podcast client, typically its developer. This agent is typically a Payment recipient , and receives payments corresponding to fee collected by the Podcast client .","title":"Podcast client owner"},{"location":"monetization-lightning/agents/#payment-recipient","text":"Any agent that receives payments through the Lightning Network . Aside from Podcast publishers and Podcast client owners , many roles in the ecosystem can by this agent, such as podcast guests, editors, charities, royalty owners, etc... This agent requires access to a Lighting Node in order to receive payments.","title":"Payment Recipient"},{"location":"monetization-lightning/data-models/","text":"Data Models classDiagram Podcast *-- Value Podcast \"1\" *-- \"1..*\" Episode Episode *-- Value Value \"1\" *-- \"1..*\" ValueRecipient User --* GlobalValueConfiguration User \"1\" --* \"0..*\" PodcastValueConfiguration PodcastValueConfiguration --* Podcast ValueConfiguration <|-- PodcastValueConfiguration ValueConfiguration <|-- GlobalValueConfiguration PodcastValueConfiguration --> GlobalValueConfiguration: takes precedence over class Value { +string method = amp or keysend +number suggested } class ValueConfiguration { +number valuePerListenedTime +number valuePerBoost } class ValueRecipient { +string name +string type = node +string customKey +string customValue +number split +boolean fee }","title":"Data Models"},{"location":"monetization-lightning/data-models/#data-models","text":"classDiagram Podcast *-- Value Podcast \"1\" *-- \"1..*\" Episode Episode *-- Value Value \"1\" *-- \"1..*\" ValueRecipient User --* GlobalValueConfiguration User \"1\" --* \"0..*\" PodcastValueConfiguration PodcastValueConfiguration --* Podcast ValueConfiguration <|-- PodcastValueConfiguration ValueConfiguration <|-- GlobalValueConfiguration PodcastValueConfiguration --> GlobalValueConfiguration: takes precedence over class Value { +string method = amp or keysend +number suggested } class ValueConfiguration { +number valuePerListenedTime +number valuePerBoost } class ValueRecipient { +string name +string type = node +string customKey +string customValue +number split +boolean fee }","title":"Data Models"},{"location":"monetization-lightning/nodes/","text":"Lightning Nodes Lightning Network Daemon (lnd) Source code and documentation: https://github.com/lightningnetwork/lnd API: https://api.lightning.community/ c-lightning Source code: https://github.com/ElementsProject/lightning Eclair Source code: https://github.com/ACINQ/eclair LNPay LNPay is a lightning web service with different offerings. You can have your own managed node or a wallet in a shared node. The wallet in a shared node is one of easiest ways to start with lightning monetization, for developers, listeners and podcasters alike. More info: https://lnpay.co API: https://docs.lnpay.co/","title":"Lightning Nodes"},{"location":"monetization-lightning/nodes/#lightning-nodes","text":"","title":"Lightning Nodes"},{"location":"monetization-lightning/nodes/#lightning-network-daemon-lnd","text":"Source code and documentation: https://github.com/lightningnetwork/lnd API: https://api.lightning.community/","title":"Lightning Network Daemon (lnd)"},{"location":"monetization-lightning/nodes/#c-lightning","text":"Source code: https://github.com/ElementsProject/lightning","title":"c-lightning"},{"location":"monetization-lightning/nodes/#eclair","text":"Source code: https://github.com/ACINQ/eclair","title":"Eclair"},{"location":"monetization-lightning/nodes/#lnpay","text":"LNPay is a lightning web service with different offerings. You can have your own managed node or a wallet in a shared node. The wallet in a shared node is one of easiest ways to start with lightning monetization, for developers, listeners and podcasters alike. More info: https://lnpay.co API: https://docs.lnpay.co/","title":"LNPay"}]}